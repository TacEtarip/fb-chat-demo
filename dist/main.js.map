{"version":3,"file":"main.js","mappings":"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","sources":["webpack://chatbotexample/external commonjs \"throng\"","webpack://chatbotexample/external commonjs \"bunyan\"","webpack://chatbotexample/./src/config/config.ts","webpack://chatbotexample/external commonjs \"compression\"","webpack://chatbotexample/external commonjs \"express\"","webpack://chatbotexample/external commonjs \"helmet\"","webpack://chatbotexample/external commonjs \"swagger-ui-express\"","webpack://chatbotexample/external commonjs \"morgan\"","webpack://chatbotexample/external commonjs \"cors\"","webpack://chatbotexample/external node-commonjs \"http\"","webpack://chatbotexample/./src/lib/util/RouteNecessary.ts","webpack://chatbotexample/./src/lib/Route.ts","webpack://chatbotexample/./src/server/controllers/FacebookControllers.ts","webpack://chatbotexample/./src/server/routes/facebookRoute.ts","webpack://chatbotexample/./src/server/crearApp.ts","webpack://chatbotexample/./src/server/ExpressAPP.ts","webpack://chatbotexample/./src/server/routes/exampleRoute.ts","webpack://chatbotexample/./src/index.ts","webpack://chatbotexample/external commonjs \"dotenv\"","webpack://chatbotexample/webpack/bootstrap","webpack://chatbotexample/webpack/runtime/compat get default export","webpack://chatbotexample/webpack/runtime/define property getters","webpack://chatbotexample/webpack/runtime/hasOwnProperty shorthand","webpack://chatbotexample/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = require(\"throng\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bunyan\");","// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nrequire('dotenv').config();\r\n\r\nimport bunyan from 'bunyan';\r\nimport pjs from '../../package.json';\r\n\r\n// * Obtiene el json package\r\nconst { version } = pjs;\r\n\r\n// * Crea un logger\r\nconst getLogger = (serviceName: string, serviceVersion: string) => \r\nbunyan.createLogger({ name: `${serviceName}:${serviceVersion}` });\r\n\r\n/**\r\n * * Configuración segun env \r\n */\r\nconst config = {\r\n\tdevelopment: {\r\n        estado: 'development',\r\n        port: parseInt(process.env.PORT),\r\n        verify_fb: process.env.VERIFY_TOKEN,\r\n        log: (): bunyan => getLogger('DEVELOPMENT', version),\r\n\t},\r\n\r\n\tproduction: {\r\n        estado: 'production',\r\n        port: parseInt(process.env.PORT),\r\n        verify_fb: process.env.VERIFY_TOKEN,\r\n        log: (): bunyan => getLogger('PRODUCCION', version),\r\n\t},\r\n\r\n    test: {\r\n        estado: 'test',\r\n        verify_fb: process.env.VERIFY_TOKEN,\r\n        port: 1,\r\n        log: (): bunyan => getLogger('TEST', version),\r\n    },\r\n};\r\n\r\n/**\r\n * Adquiere una configuración segun el tipo de env\r\n * @param env \r\n * @returns \r\n */\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const getConfig = (env: string) => {\r\n    switch (env) {\r\n        case 'development':\r\n            return config.development;\r\n        case 'production':\r\n            return config.production;\r\n        case 'test':\r\n            return config.test;                    \r\n        default:\r\n            break;\r\n    }\r\n    return null;\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"compression\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"helmet\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"swagger-ui-express\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"morgan\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Router } from 'express';\r\n\r\n/**\r\n *  Metodos express\r\n * @enum {number}\r\n */\r\n export enum Metodos {\r\n    GET = 'GET',\r\n    POST = 'POST',\r\n    DELETE = 'DELETE',\r\n    UPDATE = 'UPDATE',\r\n}\r\n\r\n/**\r\n * Metodos y parametros necesarios para crear una ruta\r\n *\r\n * @export\r\n * @abstract\r\n * @class RouteNecessary\r\n */\r\nexport default abstract class RouteNecessary {\r\n    protected abstract _router: Router;\r\n    protected abstract _ruta: string;\r\n    abstract get ruta() : string;\r\n    abstract get router() : Router;\r\n}\r\n\r\n/**\r\n * Para almacenar las rutas y sus metodos creados\r\n */\r\nexport interface IRutaDoc {\r\n    ruta: string;\r\n    metodo: Metodos;\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Router } from 'express';\r\nimport RouteNecessary from './util/RouteNecessary';\r\n\r\n/**\r\n * Usa r.router para adquirir el router y r.ruta para adquirir la ruta\r\n * @class Route\r\n */\r\nclass Route extends RouteNecessary {\r\n    protected _router: Router;\r\n    protected _ruta: string;\r\n\r\n    constructor(ruta: string) {\r\n        super();\r\n        this._router = Router();\r\n        this._ruta = ruta[0] === '/' ? ruta : '/' + ruta;\r\n    }\r\n    \r\n    /**\r\n     * Adquiere la ruta con el formato /ruta\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof Route\r\n     */\r\n    public get ruta() : string {\r\n        return this._ruta;\r\n    }\r\n\r\n    /**\r\n     * Adquiere el router de tipo express.Router\r\n     *\r\n     * @readonly\r\n     * @type {Router}\r\n     * @memberof Route\r\n     */\r\n    public get router() : Router {\r\n        return this._router;\r\n    }\r\n\r\n    /*\r\n    get(ruta: string, \r\n        middleware: (req: Request, res: Response, next?: NextFunction) => any,\r\n        ...middlewares: ((req: Request, res: Response, next?: NextFunction) => any)[]): void {\r\n            this.rutas.push({ruta, metodo: Metodos.GET});\r\n            this.router.get(ruta, middleware, ...middlewares)\r\n    }\r\n\r\n    post(ruta: string, \r\n        middleware: (req: Request, res: Response, next?: NextFunction) => any,\r\n        ...middlewares: ((req: Request, res: Response, next?: NextFunction) => any)[]): void {\r\n            if (this.) {\r\n                \r\n            }\r\n            this.rutas.push({ruta, metodo: Metodos.POST});\r\n            this.router.get(ruta, middleware, ...middlewares)\r\n    }*/\r\n    \r\n}\r\n\r\n\r\nexport default Route;","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { getConfig } from '../../config/config';\r\nimport { IFacebookWebHook } from '../../lib/FacebookInterfaces';\r\nimport { Request, Response } from 'express';\r\n/**\r\n * Controladores para facebook\r\n *\r\n * @export\r\n * @class FaceBookController\r\n */\r\nexport default class FaceBookController {\r\n    VERIFY_TOKEN: string;\r\n\r\n    constructor(public ruta: string) {\r\n        this.ruta = ruta;\r\n        this.VERIFY_TOKEN = getConfig(process.env.NODE_ENV).verify_fb;\r\n    }\r\n\r\n    /**\r\n     * Verificar webhook\r\n     *\r\n     * @memberof FaceBookController\r\n     */\r\n    verificacionTokenWebhook = (req: Request, res: Response): any => {\r\n        const mode = req.query['hub.mode'];\r\n        const token = req.query['hub.verify_token'];\r\n        const challenge = req.query['hub.challenge'];\r\n        if (mode && token) {\r\n            if (mode === 'subscribe' && token === this.VERIFY_TOKEN) {\r\n                return res.status(200).send(challenge);\r\n            } else {\r\n                return res.status(403).json({error: 'Verificacion fallida'});    \r\n            }\r\n        } else {\r\n            return res.status(403).json({error: 'Verificacion fallida'});    \r\n        } \r\n    }\r\n\r\n    /**\r\n     * Recivir webhook\r\n     *\r\n     * @memberof FaceBookController\r\n     */\r\n    recivirWebHook = (req: Request, res: Response): any => {\r\n        try {\r\n            const body = req.body as IFacebookWebHook;\r\n            if (body.object === 'page') {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                body.entry.forEach((entry) => {\r\n                    const webhook_event = entry.messaging[0];\r\n                    console.log(webhook_event);\r\n                });\r\n                return res.status(200).send('EVENT_RECEIVED');\r\n              } else {\r\n                return res.status(404).json({error: 'El evento no es de una pagina de subscripcion'});\r\n              }\r\n        } catch (error) {\r\n            return res.status(500).json({error: error.message});\r\n        } \r\n    }\r\n}\r\n","import Route from '../../lib/Route';\r\nimport FacebookControllers from '../controllers/FacebookControllers';\r\n/**\r\n * Crea las rutas para facebook\r\n * @returns Route\r\n */\r\nexport const crearRutaFB = (): Route => {\r\n\r\n    const rutaNombre = '/fb'\r\n\r\n    const facebookRoute = new Route(rutaNombre);\r\n\r\n    const fbControllers = new FacebookControllers(rutaNombre);\r\n\r\n    facebookRoute.router.get('/', (req, res) => {\r\n        return res.json({message: `Ruta ${rutaNombre} funciona`});\r\n    });\r\n    \r\n    /**\r\n     * * Crea POST para webhook de fb espera un body de tipo IFacebookWebHook el object debe ser 'page'\r\n    */\r\n     facebookRoute.router.post('/webhook', fbControllers.recivirWebHook);\r\n        \r\n    /**\r\n     *  * Crea GET espera un query donde el mode tiene que ser subscribe y \r\n     *  * dar el token secreto en hub.verify_token, el challange en hub.challenge y el mode en hub.mode\r\n    */\r\n    facebookRoute.router.get('/webhook', fbControllers.verificacionTokenWebhook);\r\n\r\n    return facebookRoute;\r\n};\r\n","import ExpressAPP from './ExpressAPP';\r\nimport { crearRutaFB } from './routes/facebookRoute';\r\nimport { crearRutaExample } from './routes/exampleRoute';\r\n/**\r\n * Crea una nueva aplicacion usando ExpressAPP\r\n * @param port \r\n * @returns \r\n */\r\nexport const nuevaApp = (port: number): ExpressAPP => {\r\n    const expressAPP = new ExpressAPP(port);\r\n\r\n    /**\r\n     * *Crea rutas para el example\r\n     */\r\n    const rutasExpample = crearRutaExample();\r\n    expressAPP.agregarRuta(rutasExpample);\r\n\r\n    /**\r\n     * *Crea rutas para fb\r\n     */\r\n    const rutasFB = crearRutaFB();\r\n    expressAPP.agregarRuta(rutasFB);\r\n\r\n    expressAPP.crearServidor();\r\n    return expressAPP;\r\n}","import compression from 'compression';\r\nimport express from 'express';\r\nimport helmet from 'helmet';\r\nimport swaggerUI from 'swagger-ui-express';\r\nimport swaggerDoc from '../documentation/swaggerDocument.json';\r\nimport morgan from 'morgan';\r\nimport cors from 'cors';\r\nimport { IExpressNecesaryFunctions, IExpressNecesaryParams } from '../lib/util/ExpressNecesary';\r\nimport http from 'http';\r\nimport Route from '../lib/Route';\r\n\r\n/**\r\n *\r\n *\r\n * @class ExpressAPP\r\n * Clase para crear y manejar la aplicación de express\r\n */\r\nclass ExpressAPP implements IExpressNecesaryFunctions, IExpressNecesaryParams {\r\n    app: express.Application;\r\n    server: http.Server;\r\n    port: number;\r\n    rutas: string[] = ['/api-docs'];\r\n    /**\r\n     *Creates an instance of ExpressAPP.\r\n     * @memberof ExpressAPP\r\n     */\r\n    constructor(port: number) {\r\n        this.app = express();\r\n        this.port = port;\r\n        this.agregarConfiguracionBasica();\r\n        this.agregarDocumentacion();\r\n    }\r\n\r\n    /**\r\n     * Agrega la configuración basica necesaria para el optimo y correcto funcionamiento de la app\r\n     *\r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarConfiguracionBasica(): void {\r\n        this.app.use(helmet());\r\n        this.app.use(compression());\r\n        this.app.use(cors());\r\n        this.app.use(morgan(':method :url'));\r\n        this.app.use(express.json());\r\n        this.app.use(express.urlencoded({ extended: true }));\r\n    }\r\n    \r\n    /**\r\n     * Usando Swagger agrega la documentation base\r\n     * Es importante tener '../documentation/swaggerDocument'\r\n     * \r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarDocumentacion(): void {\r\n        this.app.use('/api-docs', swaggerUI.serve, swaggerUI.setup(swaggerDoc));\r\n        // * Redirije / a la documentacion\r\n        this.app.get('/', (req, res) => {\r\n          res.redirect('/api-docs');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * En esta funcion agrega las rutas\r\n     *\r\n     * @memberof ExpressAPP\r\n     */\r\n    agregarRuta(route: Route): void {\r\n        this.rutas.push(route.ruta);\r\n        this.app.use(route.ruta, route.router);\r\n    }\r\n\r\n    /**\r\n     * Crear el servidor dado un port, usa el module http\r\n     *\r\n     * @param {number} port\r\n     * @returns http.Server\r\n     * @memberof ExpressAPP\r\n     */\r\n    crearServidor(): http.Server {\r\n        this.server = http.createServer(this.app);\r\n        this.server.listen(this.port);\r\n        return this.server;\r\n    }\r\n}\r\n\r\nexport default ExpressAPP;","import Route from '../../lib/Route';\r\n\r\n// ** Crea una ruta\r\nexport const crearRutaExample = (): Route => {\r\n\r\n    const rutaNombre = '/example'\r\n\r\n    const excampleRoute = new Route(rutaNombre);\r\n\r\n    // *Agregar las rutas get, post aqui\r\n    \r\n    excampleRoute.router.get('/', (req, res) => {\r\n        return res.json({message: `Ruta ${rutaNombre} funciona`});\r\n    });\r\n\r\n    return excampleRoute;\r\n};\r\n","import throng from 'throng';\r\nimport { getConfig } from './config/config';\r\nimport { nuevaApp } from './server/crearApp';\r\n\r\nconst WORKERS = (process.env.WEB_CONCURRENCY || 1) as number;\r\n\r\nconst configENV = getConfig(process.env.NODE_ENV);\r\n\r\nconst PORT = parseInt(process.env.PORT);\r\n\r\nconst start = (id: number) => {\r\n    configENV.log().info(`Id Worker ${id}`);\r\n    const serverApp = nuevaApp(PORT);\r\n    const server = serverApp.server;\r\n\r\n    server.on('listening', () => {\r\n        configENV.log().info('http://localhost:' + PORT);\r\n    });\r\n  \r\n    server.on('close', () => {\r\n        configENV.log().info('Servidor cerrado');\r\n    }) \r\n};\r\n\r\nthrong({ worker: start, count: WORKERS });","module.exports = require(\"dotenv\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(947);\n"],"names":["require","version","getLogger","serviceName","serviceVersion","name","config","development","estado","port","parseInt","process","env","PORT","verify_fb","VERIFY_TOKEN","log","production","test","getConfig","Metodos","constructor","ruta","super","this","_router","Router","_ruta","router","FaceBookController","verificacionTokenWebhook","req","res","mode","query","token","challenge","status","send","json","error","recivirWebHook","body","object","entry","forEach","webhook_event","messaging","console","message","nuevaApp","expressAPP","rutas","app","agregarConfiguracionBasica","agregarDocumentacion","use","extended","get","redirect","agregarRuta","route","push","crearServidor","server","listen","rutasExpample","excampleRoute","crearRutaExample","rutasFB","facebookRoute","fbControllers","post","crearRutaFB","WORKERS","WEB_CONCURRENCY","configENV","worker","id","info","on","count","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}